"use strict";angular.module("angular.extras.thirdparty").directive("aeNgTable",["$location",function(a){function b(a,b){var c={count:b.max,page:b.page};if(b.sort){var d={};d[b.sort]=b.order||"asc",c.sorting=d}if(b.filters)try{c.filter=JSON.parse(b.filters)}catch(e){console.error("Error parsing filters.",e),c.filter={}}a.parameters(c)}return{restrict:"A",scope:{ngTableParams:"=aeNgTable"},link:function(c){var d=c.ngTableParams;c.$on("$locationChangeSuccess",function(c,e,f){var g=!0;if(e&&f){var h=e.substring(0,e.indexOf("?")),i=f.substring(0,f.indexOf("?"));g=h===i}g&&b(d,a.search())})}}}]),angular.module("angular.extras.thirdparty").factory("AeNgTableService",["NgTableParams","$q","$location",function(a,b,c){function d(a,b){if(b.max&&(a.max=b.max),b.page&&(a.page=b.page),b.sort&&(a.sorting=a.sorting||{},a.sorting[b.sort]=b.order||"asc"),b.filters){var c=b.filters;if("string"==typeof b.filters)try{c=JSON.parse(b.filters),a.filter=a.filter||{},angular.extend(a.filter,c)}catch(d){console.error("Error parsing paramsFromURL filters",d)}}}return{getTableParams:function(e,f,g,h,i){h=h||{};var j={page:1,count:10,sorting:{id:"asc"}};angular.extend(j,f),h.paramsAsURL&&d(j,c.search());var k={getData:function(a){var d=a.sorting(),f=Object.keys(d)[0],j=d[f],k={max:a.count(),page:a.page(),filters:a.filter(),sort:f,order:j};if(h.paramsAsURL){var l=angular.copy(k);l.filters=JSON.stringify(l.filters),a.firstTimeExecuted||c.replace(),c.search(l)}var m=b.defer(),n=angular.extend({},k,g);return e.query(n,function(b,c){var d=c();a.total(d["total-count"]),i&&i(b),b.result?m.resolve(b.result):m.resolve(b)},m.reject),a.firstTimeExecuted=!0,a.dataPromise=m.promise,m.promise}};angular.extend(k,h);var l=new a(j,k);return l.getCurrentSort=function(){var a=this.sorting(),b=Object.keys(a)[0];return{sort:b,order:a[b]}},l}}}]);